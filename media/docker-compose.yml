services:
  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    user: 1001:1001
    network_mode: 'host'
    volumes:
      - ./config/jellyfin:/config
      - ./cache:/cache
      - type: bind
        source: movies
        target: /movies
      - type: bind
        source: shows
        target: /shows
    restart: 'unless-stopped'
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIMEZONE}
    volumes:
      - ./config/sonarr:/config
      - shows:/tv #optional
      - downloads:/downloads #optional
    ports:
      - 8989:8989
    restart: unless-stopped
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIMEZONE}
    volumes:
      - ./config/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=Europe/Bucharest
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./config/qbit:/config
      - downloads:/downloads #optional
    ports:
      - 8080:8080
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped

jellyseerr:
  image: fallenbagel/jellyseerr:latest
  container_name: jellyseerr
  environment:
    - LOG_LEVEL=debug
    - TZ=Asia/Tashkent
    - PORT=5055 #optional
  ports:
    - 5055:5055
  volumes:
    - ./config/jellyseerr:/app/config
  healthcheck:
    test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
    start_period: 20s
    timeout: 3s
    interval: 15s
    retries: 3
  restart: unless-stopped

volumes:
  downloads: ${DOWNLOADS}
  movies: ${MOVIES}
  shows: ${SHOWS}